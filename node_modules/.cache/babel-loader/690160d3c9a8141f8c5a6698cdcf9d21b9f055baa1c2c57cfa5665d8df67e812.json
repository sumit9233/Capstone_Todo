{"ast":null,"code":"import _slicedToArray from\"C:/Users/sumit/todo2/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState}from\"react\";import Button from\"../UI/Button\";import classes from'./Input.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoInput=function TodoInput(props){//validity check\nvar _useState=useState(true),_useState2=_slicedToArray(_useState,2),isValid=_useState2[0],setIsValid=_useState2[1];//Using ref for inputs\nvar EnteredInput=useRef(null);var formSubmitHandler=function formSubmitHandler(event){event.preventDefault();if(EnteredInput.current.value.trim().length===0){setIsValid(false);return;}setIsValid(true);props.onAdd(EnteredInput.current.value);document.getElementById(\"myForm\").reset();};return/*#__PURE__*/_jsxs(\"form\",{id:\"myForm\",onSubmit:formSubmitHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes['form-control'],\" \").concat(!isValid&&classes.invalid),children:[/*#__PURE__*/_jsx(\"label\",{children:\" Add your Task \"}),/*#__PURE__*/_jsx(\"input\",{ref:EnteredInput,type:\"text\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.button,children:[/*#__PURE__*/_jsx(Button,{type:\"submit\",children:\" Add \"}),!isValid&&/*#__PURE__*/_jsx(\"p\",{children:\" Invalid Task Input ! \"})]})]});};export default TodoInput;","map":{"version":3,"names":["React","useRef","useState","Button","classes","TodoInput","props","isValid","setIsValid","EnteredInput","formSubmitHandler","event","preventDefault","current","value","trim","length","onAdd","document","getElementById","reset","invalid","button"],"sources":["C:/Users/sumit/todo2/src/Component/Input/Input.js"],"sourcesContent":["import React, { useRef, useState} from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from './Input.module.css'\r\n\r\nconst TodoInput = (props) => {\r\n  //validity check\r\n  const[isValid, setIsValid] = useState(true);\r\n  \r\n  //Using ref for inputs\r\n  const EnteredInput = useRef(null);\r\n\r\n  const formSubmitHandler = (event) =>{\r\n    event.preventDefault()\r\n\r\n    if (EnteredInput.current.value.trim().length === 0){\r\n      setIsValid(false);\r\n      return\r\n    }\r\n    setIsValid(true)\r\n    props.onAdd(EnteredInput.current.value)\r\n    document.getElementById(\"myForm\").reset();\r\n\r\n  }\r\n\r\n  return (\r\n    <form id = 'myForm' onSubmit ={formSubmitHandler} >\r\n      <div className={`${classes['form-control']} ${!isValid && classes.invalid}`}>\r\n        <label> Add your Task </label>\r\n        <input ref={EnteredInput} type=\"text\"></input>\r\n      </div>\r\n      <div className={classes.button}>\r\n        <Button type='submit'> Add </Button>\r\n        {!isValid && <p> Invalid Task Input ! </p>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n"],"mappings":"0GAAA,MAAOA,MAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAO,OAAO,CAC9C,MAAOC,OAAM,KAAM,cAAc,CACjC,MAAOC,QAAO,KAAM,oBAAoB,yFAExC,GAAMC,UAAS,CAAG,QAAZA,UAAS,CAAIC,KAAK,CAAK,CAC3B;AACA,cAA6BJ,QAAQ,CAAC,IAAI,CAAC,wCAArCK,OAAO,eAAEC,UAAU,eAEzB;AACA,GAAMC,aAAY,CAAGR,MAAM,CAAC,IAAI,CAAC,CAEjC,GAAMS,kBAAiB,CAAG,QAApBA,kBAAiB,CAAIC,KAAK,CAAI,CAClCA,KAAK,CAACC,cAAc,EAAE,CAEtB,GAAIH,YAAY,CAACI,OAAO,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,GAAK,CAAC,CAAC,CACjDR,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CACAA,UAAU,CAAC,IAAI,CAAC,CAChBF,KAAK,CAACW,KAAK,CAACR,YAAY,CAACI,OAAO,CAACC,KAAK,CAAC,CACvCI,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK,EAAE,CAE3C,CAAC,CAED,mBACE,cAAM,EAAE,CAAG,QAAQ,CAAC,QAAQ,CAAGV,iBAAkB,wBAC/C,aAAK,SAAS,WAAKN,OAAO,CAAC,cAAc,CAAC,aAAI,CAACG,OAAO,EAAIH,OAAO,CAACiB,OAAO,CAAG,wBAC1E,uBAAO,iBAAe,EAAQ,cAC9B,cAAO,GAAG,CAAEZ,YAAa,CAAC,IAAI,CAAC,MAAM,EAAS,GAC1C,cACN,aAAK,SAAS,CAAEL,OAAO,CAACkB,MAAO,wBAC7B,KAAC,MAAM,EAAC,IAAI,CAAC,QAAQ,UAAC,OAAK,EAAS,CACnC,CAACf,OAAO,eAAI,mBAAG,wBAAsB,EAAI,GACtC,GACD,CAEX,CAAC,CAED,cAAeF,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}