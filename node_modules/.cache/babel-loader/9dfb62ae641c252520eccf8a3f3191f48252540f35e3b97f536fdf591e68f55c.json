{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sumit\\\\todo2\\\\src\\\\Component\\\\Input\\\\Input.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport classes from './Input.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = props => {\n  _s();\n  //validity check\n  const [isValid, setIsValid] = useState(true);\n\n  //Using ref for inputs\n  const EnteredInput = useRef(null);\n  const formSubmitHandler = event => {\n    event.preventDefault();\n    if (EnteredInput.current.value.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n    setIsValid(true);\n    props.onAdd(EnteredInput.current.value);\n    document.getElementById(\"myForm\").reset();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"myForm\",\n    onSubmit: formSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes['form-control']} ${!isValid && classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \" Add your Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: EnteredInput,\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), !isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Invalid Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoInput, \"Pf6+Q2uP825v9WzuZi1pNZqxLd4=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["React","useRef","useState","Button","classes","TodoInput","props","isValid","setIsValid","EnteredInput","formSubmitHandler","event","preventDefault","current","value","trim","length","onAdd","document","getElementById","reset","invalid","button"],"sources":["C:/Users/sumit/todo2/src/Component/Input/Input.js"],"sourcesContent":["import React, { useRef, useState} from \"react\";\r\nimport Button from \"../UI/Button\";\r\nimport classes from './Input.module.css'\r\n\r\nconst TodoInput = (props) => {\r\n  //validity check\r\n  const[isValid, setIsValid] = useState(true);\r\n  \r\n  //Using ref for inputs\r\n  const EnteredInput = useRef(null);\r\n\r\n  const formSubmitHandler = (event) =>{\r\n    event.preventDefault()\r\n\r\n    if (EnteredInput.current.value.trim().length === 0){\r\n      setIsValid(false);\r\n      return\r\n    }\r\n    setIsValid(true)\r\n    props.onAdd(EnteredInput.current.value)\r\n    document.getElementById(\"myForm\").reset();\r\n\r\n  }\r\n\r\n  return (\r\n    <form id = 'myForm' onSubmit ={formSubmitHandler} >\r\n      <div className={`${classes['form-control']} ${!isValid && classes.invalid}`}>\r\n     \r\n        <label> Add your Task </label>\r\n        <input ref={EnteredInput} type=\"text\"></input>\r\n      </div>\r\n      <div className={classes.button}>\r\n        <Button type='submit'> Add </Button>\r\n        {!isValid && <p> Invalid Task </p>}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoInput;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC9C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,OAAO,MAAM,oBAAoB;AAAA;AAExC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAA;EAC3B;EACA,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;;EAE3C;EACA,MAAMO,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjC,MAAMS,iBAAiB,GAAIC,KAAK,IAAI;IAClCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIH,YAAY,CAACI,OAAO,CAACC,KAAK,CAACC,IAAI,EAAE,CAACC,MAAM,KAAK,CAAC,EAAC;MACjDR,UAAU,CAAC,KAAK,CAAC;MACjB;IACF;IACAA,UAAU,CAAC,IAAI,CAAC;IAChBF,KAAK,CAACW,KAAK,CAACR,YAAY,CAACI,OAAO,CAACC,KAAK,CAAC;IACvCI,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK,EAAE;EAE3C,CAAC;EAED,oBACE;IAAM,EAAE,EAAG,QAAQ;IAAC,QAAQ,EAAGV,iBAAkB;IAAA,wBAC/C;MAAK,SAAS,EAAG,GAAEN,OAAO,CAAC,cAAc,CAAE,IAAG,CAACG,OAAO,IAAIH,OAAO,CAACiB,OAAQ,EAAE;MAAA,wBAE1E;QAAA,UAAO;MAAe;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC9B;QAAO,GAAG,EAAEZ,YAAa;QAAC,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C,eACN;MAAK,SAAS,EAAEL,OAAO,CAACkB,MAAO;MAAA,wBAC7B,QAAC,MAAM;QAAC,IAAI,EAAC,QAAQ;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,EACnC,CAACf,OAAO,iBAAI;QAAA,UAAG;MAAc;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAC9B;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEX,CAAC;AAAC,GAjCIF,SAAS;AAAA,KAATA,SAAS;AAmCf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}